---
- name: Extract certificate and key from acme.json
  shell: |
    jq -r '.letsencrypt.Certificates[] | select(.domain.main == "{{ INETHI_LOCAL_DOMAIN }}") | .certificate' "{{ DATA_MOUNT }}/traefik/letsencrypt/acme.json" | base64 -d > "{{ DATA_MOUNT }}/keycloak/certs/cert.pem"
    jq -r '.letsencrypt.Certificates[] | select(.domain.main == "{{ INETHI_LOCAL_DOMAIN }}") | .key' "{{ DATA_MOUNT }}/traefik/letsencrypt/acme.json" | base64 -d > "{{ DATA_MOUNT }}/keycloak/certs/privkey.pem"
  args:
    executable: /bin/bash
  become: true
- name: Generate keystore from certificate and key
  shell: |
    CERT_DIR="{{ DATA_MOUNT }}/keycloak/certs"
    openssl pkcs12 -export -in "{{ DATA_MOUNT }}/keycloak/certs/cert.pem" -inkey "{{ DATA_MOUNT }}/keycloak/certs/privkey.pem" -out "{{ DATA_MOUNT }}/keycloak/certs/keystore.p12" -name keycloak -password pass:{{ KEYSTORE_PASS }}
    keytool -importkeystore -deststorepass {{ KEYSTORE_PASS }} -destkeypass {{ KEYSTORE_PASS }} -destkeystore "{{ DATA_MOUNT }}/keycloak/certs/keystore.jks" -srckeystore "{{ DATA_MOUNT }}/keycloak/certs/keystore.p12" -srcstoretype PKCS12 -alias keycloak -srcstorepass {{ KEYSTORE_PASS }} -noprompt
  args:
    executable: /bin/bash
  become: true
