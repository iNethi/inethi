- name: Deploy Jellyfin with Docker Container
  hosts: localserver
  become: true
  gather_facts: no

  vars:
    nextcloud_rshare_volume: "/mnt/data/share/Rshare"
    nextcloud_rvideo_volume: "/mnt/data/share/Rvideo"
    nextcloud_rphoto_volume: "/mnt/data/share/Rphoto"
    nextcloud_rmusic_volume: "/mnt/data/share/Rmusic"
    JELLYFIN_VOLUME: "/mnt/data/jellyfin"
    TRAEFIK_API_RULE_HOST: "jellyfin"
    inethi_dn: "inethilocal.net"
    TRAEFIK_ENTRYPOINT: "websecure"
    INETHI_NETWORK: "inethi-bridge-traefik"

  tasks:
    - name: Ensure Nextcloud directories exist
      file:
        path: "{{ item }}"
        state: directory
        mode: 'o+w'
      loop:
        - "{{ nextcloud_rshare_volume }}"
        - "{{ nextcloud_rvideo_volume }}"
        - "{{ nextcloud_rphoto_volume }}"
        - "{{ nextcloud_rmusic_volume }}"
    - name: Start Jellyfin container
      docker_container:
        name: inethi-jellyfin
        image: linuxserver/jellyfin
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "UTC"
          UMASK_SET: "022"
        volumes:
          - "{{ nextcloud_rshare_volume }}:/mnt/Rshare"
          - "{{ nextcloud_rvideo_volume }}:/mnt/Rvideo"
          - "{{ nextcloud_rphoto_volume }}:/mnt/Rphoto"
          - "{{ nextcloud_rmusic_volume }}/config:/config"
        restart_policy: unless-stopped
        labels:
          traefik.enable: "true"
          traefik.http.routers.jellyfin.rule: "Host(`{{ TRAEFIK_API_RULE_HOST }}.{{ inethi_dn }}`)"
          traefik.http.routers.jellyfin.entrypoints: "{{ TRAEFIK_ENTRYPOINT }}"
        networks:
          - name: "{{ INETHI_NETWORK }}"