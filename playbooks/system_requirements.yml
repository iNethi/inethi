---
- name: Connect to remote server and install Docker
  hosts: localserver
  gather_facts: yes
  become: true

  tasks:
    - name: Check Distribution
      debug: msg="{{ ansible_distribution }}"

    - name: Check User
      debug: msg="{{ ansible_user }}"

    - name: Exit with error if not Ubuntu
      fail:
          msg: "Remote system is not Ubuntu"
      when: not ansible_distribution == "Ubuntu"

    - name: Check if Docker is installed
      command: docker --version
      register: docker_installed
      ignore_errors: yes

    - name: Install Docker and Docker Compose
      block:
        - name: Install required packages
          apt:
            name: "{{ packages }}"
            state: latest
            update_cache: yes
          vars:
            packages:
              - apt-transport-https
              - ca-certificates
              - curl
              - gnupg
              - lsb-release

        - name: Add Dockerâ€™s official GPG key
          apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            state: present

        - name: Set up the stable repository
          apt_repository:
            repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
            state: present

        - name: Install Docker Engine
          apt:
            name: "{{ packages }}"
            state: latest
            update_cache: yes
          vars:
            packages:
              - docker-ce
              - docker-ce-cli
              - containerd.io
              - docker-buildx-plugin
              - docker-compose-plugin
        - name: Ensure docker group exists
          group:
            name: docker
            state: present

        - name: Add user to the docker group
          user:
            name: "{{ ansible_user_id }}"
            groups: docker
            append: yes

        - name: Reboot the system
          reboot:

        - name: Wait for system to become reachable
          wait_for_connection:
            delay: 10
            timeout: 300
      when: docker_installed is failed
    - name: Install pip3
      apt:
        name: python3-pip
        state: present

    - name: Install Python Docker library
      pip:
        name: docker
        state: present

    - name: Install Docker Compose Python Library
      pip:
        name: docker-compose
        state: present

    - name: Adding users to docker group
      user:
        name: '{{ ansible_user }}'
        groups: docker
        append: yes
      register: user_group
      when: docker_installed.rc != 0

    - name: Reboot the system
      reboot:
        reboot_timeout: 600
        pre_reboot_delay: 0
        post_reboot_delay: 15
      when: user_group.changed

    - name: Create the Docker Network network
      docker_network:
        name: inethi-bridge-traefik
        driver: bridge
        attachable: yes

